services:
  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: sunoai-contests-api
    environment:
      - PORT=5000
      - ENV=PRODUCTION
      - MONGODB_URL=mongodb://mongodb:27017/
      - MONGODB_DB=sunoai-contests
      - CORS_ORIGIN_URL=http://localhost:3000
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=admin
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    volumes:
      - api_data:/app
      - api_node_modules:/app/node_modules
    networks:
      - database
      - backend

  gui:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=http://localhost:5000
        - REACT_APP_HOST=http://localhost:3000
        - SERVER_NAME=localhost
    container_name: sunoai-contests-gui
    ports:
      - "3000:80"
    stdin_open: true
    networks:
      - backend

  mongodb:
    image: mongo
    container_name: sunoai-contests-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/mongodb
    networks:
      - database

  # PRODUCTION-ONLY
  # reverse-proxy:
  #   image: valian/docker-nginx-auto-ssl:1.0.0
  #   container_name: sunoai-contests-reverse-proxy
  #   restart: on-failure
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./.ssl-data:/etc/resty-auto-ssl
  #   environment:
  #     - ALLOWED_DOMAINS="(app|admin).localhost"
  #     - SITES="app.localhost=gui:3000;admin.localhost=api:5000"
  #     - FORCE_HTTPS="true"
  #   depends_on:
  #     - api
  #     - gui
  #   networks:
  #     - backend

volumes:
  api_data:
  api_node_modules:
  mongodb_data:
  .ssl-data:

networks:
  database:
    driver: bridge
  backend:
    name: backend
